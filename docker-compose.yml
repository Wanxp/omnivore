version: '3'
services:
  migrate:
    build:
      context: .
      dockerfile: ./packages/db/Dockerfile
    container_name: "omnivore-migrate"
    command: '/bin/sh ./packages/db/setup.sh' # Also create a demo user with email: demo@omnivore.app, password: demo_password
    environment:
      - PGPASSWORD=$PGPASSWORD
      - POSTGRES_USER=$POSTGRES_USER
      - PG_HOST=$PG_HOST
      - PG_PASSWORD=$PG_PASSWORD
      - PG_DB=omnivore
    depends_on:
      postgres:
        condition: service_healthy

  api:
    build:
      context: .
      dockerfile: ./packages/api/Dockerfile
    container_name: "omnivore-api"
    ports:
      - "4000:8080"
    healthcheck:
      test: ["CMD-SHELL", "nc -z 0.0.0.0 8080 || exit 1"]
      interval: 15s
      timeout: 90s
    environment:
      - API_ENV=local
      - PG_HOST=$PG_HOST
      - PG_USER=$POSTGRES_USER
      - PG_PASSWORD=$PG_PASSWORD
      - PG_DB=omnivore
      - PG_PORT=$PG_PORT
      - PG_POOL_MAX=20
      - JAEGER_HOST=jaeger
      - IMAGE_PROXY_SECRET=some-secret
      - JWT_SECRET=$JWT_SECRET
      - SSO_JWT_SECRET=$SSO_JWT_SECRET
      - CLIENT_URL=http://localhost:3000
      - GATEWAY_URL=https://localhost:8080/api
      - CONTENT_FETCH_URL=http://content-fetch:8080/?token=some_token
    depends_on:
      migrate:
        condition: service_completed_successfully

  web:
    build:
      context: .
      dockerfile: ./packages/web/Dockerfile
      args:
        - APP_ENV=prod
        - BASE_URL=http://localhost:3000
        - SERVER_BASE_URL=http://localhost:4000
        - HIGHLIGHTS_BASE_URL=http://localhost:3000
    container_name: "omnivore-web"
    ports:
      - "3000:8080"
    environment:
      - NEXT_PUBLIC_APP_ENV=prod
      - NEXT_PUBLIC_BASE_URL=http://localhost:3000
      - NEXT_PUBLIC_SERVER_BASE_URL=http://localhost:4000
      - NEXT_PUBLIC_HIGHLIGHTS_BASE_URL=http://localhost:3000
    depends_on:
      api:
        condition: service_healthy

  content-fetch:
    build:
      context: .
      dockerfile: ./packages/content-fetch/Dockerfile
    container_name: "omnivore-content-fetch"
    ports:
      - "9090:8080"
    environment:
      - JWT_SECRET=some_secret
      - VERIFICATION_TOKEN=some_token
      - REST_BACKEND_ENDPOINT=http://api:8080/api
    depends_on:
      api:
        condition: service_healthy
